package com.modelo.validator;

import com.modelo.exception.InvalidDocumentException;
import com.modelo.exception.InvalidNameException;
import com.modelo.exception.InvalidPhoneNumberException;

public class ClienteValidator {

	public static void validateClienteData(String razaoSocial, String cnpj, String cpf, String phone) {
		validateRazaoSocial(razaoSocial);
		validateCnpj(cnpj);
		validateCpf(cpf);
		validateTelefone(phone);
	}

	public static void validateRazaoSocial(String razaoSocial) {
		if (razaoSocial == null || razaoSocial.isEmpty()) {
			throw new InvalidNameException("Nome inv치lido");
		}

	}

	public static void validateCnpj(String cnpj) {
		if (cnpj == null || cnpj.matches("\\d{14}") || cnpj.chars().distinct().count() == 1 || !isValidCnpj(cnpj)) {

			throw new InvalidDocumentException("CPF inv치lido.");
		}

	}

	public static void validateCpf(String cpf) {
		if (cpf == null || cpf.matches("\\d{11}") || cpf.chars().distinct().count() == 1 || !isValidCpf(cpf)) {

			throw new InvalidDocumentException("CNPJ inv치lido.");
		}
	}

	public static void validatePhone(String phone) {
		String regex = "^(\\\\(\\\\d{2}\\\\)\\\\s?)?(\\\\d{4,5}-\\\\d{4})$";
		if (phone == null || !phone.matches(regex)) {

			throw new InvalidPhoneNumberException("Telefone inv치lido.");
		}
	}

	private static boolean isValidCpf(String cpf) {

		int sum1 = 0;
		for (int i = 0; i < 9; i++) {

			sum1 += Character.getNumericValue(cpf.charAt(i)) * (10 - i);
		}

		int checkDigit1 = 11 - (sum1 % 11);
		checkDigit1 = (checkDigit1 >= 10) ? 0 : checkDigit1;

		int sum2 = 0;
		for (int i = 0; i < 9; i++) {

			sum2 += Character.getNumericValue(cpf.charAt(i)) * (11 - i);
		}
		
		int checkDigit2 = 11 - (sum2 % 11);
		checkDigit2 = (checkDigit2 >= 10) ? 0 : checkDigit2;
		
		return 	checkDigit1 == Character.getNumericValue(cpf.charAt(9)) &&
				checkDigit2 == Character.getNumericValue(10);
	}
	
	

}
